<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="w3.css">
	<style>
    .slidecontainer {
        width: 100%;
    }

    .slider {
        -webkit-appearance: none;
        width: 100%;
        height: 30px;
        background: #d3d3d3;
        outline: none;
        opacity: 0.7;
        -webkit-transition: .2s;
        transition: opacity .2s;
    }

    .slider:hover {
        opacity: 1;
    }

    .slider::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 50px;
        height: 30px;
        background: #4CAF50;
        cursor: pointer;
    }

    .slider::-moz-range-thumb {
        width: 50px;
        height: 30px;
        background: #4CAF50;
        cursor: pointer;
    }
  </style>
</head>

<body>
	<div class="w3-container">
		<h2>WS2812</h2>
		<script src="iro.min.js" charset="utf-8"></script>
		<div class="w3-card w3-light-grey w3-margin" id="colorpicker">
		</div>
		<div class="w3-card w3-green w3-round w3-margin" id="status">
		</div>
		<div class="w3-card w3-light-grey w3-margin">
		<h3>Speed</h3>
		<input id="Speedslider" type="range" min="10" max="5000" step="1" class="slider" oninput="callurl('/control?cmd=WS2812setSpeed('+this.value+')')" />
		</div>
		<h3>Brightness</h3>
		<input id="Brightnessslider" type="range" min="0" max="255" step="1" class="slider" oninput="callurl('/control?cmd=WS2812setBrightness('+this.value+')')" />
		</div>
		<h3>Mode</h3>
		<input id="Modeslider" type="range" min="0" max="55" step="1" class="slider" oninput="callurl('/control?cmd=WS2812setMode('+this.value+')')" />
		</div>
		<div class="w3-card w3-green w3-round w3-margin" id="nodes">
		</div>
	</div>
<div>
  <script>
    var initial=0;
    var requestUrl = new XMLHttpRequest(); //call urls
    var requestJson = new XMLHttpRequest(); //update colorpicker
		var requestVars = new XMLHttpRequest();
    var ColorPicker = new iro.ColorPicker("#colorpicker", {
      width: 320,
      height: 320,
      color: "#fff",
      markerRadius: 8,
      padding: 4,
      sliderMargin: 24,
      borderWidth: 2,
      borderColor: "#000",
    });

    ColorPicker.on("color:change", function(color, changes) {
      if ( initial==1 ) {
        // Log the color's hex RGB value to the dev console
        console.log(color.hsv);
	  		callurl("/control?cmd=WS2812setColor("+parseInt(color.rgb.r)+","+parseInt(color.rgb.g)+","+parseInt(color.rgb.b)+")");
        console.log(ColorPicker.color.hsv);
      }
    });

    function callurl(url,update=false) {
      if(update) {
        initial=0;
      }
      requestUrl.open("GET",url, true);
      requestUrl.send();
    }

		window.onload = function () {
			loadpresets();
			initial=0;
			savemode=false;
			requestJson.open("GET","/json?WS2812", true);
      requestJson.send();
			//requestVars.open("GET","/json?vars", true);
			//requestVars.send();
			var timeout = window.setTimeout('requestJson.open("GET","/json?nodes",true);requestJson.send();', 500);
		}
		function jsonCallback() {
			if (this.readyState == 4 && this.status == 200 ) {
				var myObj = JSON.parse(this.responseText);
				if (myObj.hasOwnProperty("WS2812")) {
					document.getElementById("Speedslider").value = myObj.WS2812.Speed;
					document.getElementById("Brightnessslider").value = myObj.WS2812.Brightness;
					document.getElementById("Modeslider").value = myObj.WS2812.Mode;
				} else if (myObj.hasOwnProperty("nodes")) {
					var nodes="";
					for(var i=0;i<16;i++) {
						if (typeof myObj.nodes[i] !== 'undefined') {
							nodes += '<a href="http://'+myObj.nodes[i].ip+'" target="_blank">'+myObj.nodes[i].name+" ("+myObj.nodes[i].ip+")"+'</a></br>';
						}
					}
					document.getElementById("nodes").innerHTML = nodes;
				}
			}
		}
		requestJson.onreadystatechange = jsonCallback;
	</script>
