; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[core_2_4_1]
platform                  = espressif8266@1.7.3

[core_2_4_2]
platform                  = espressif8266@1.8.0

[core_staged]
platform                  = https://github.com/platformio/platform-espressif8266.git#feature/stage


[env:nodemcuv2]
board_build.f_cpu = 160000000L
upload_speed = 921600
platform = ${core_2_4_2.platform}
board = nodemcuv2
framework = arduino
build_flags = -Wl,-Teagle.flash.4m1m.ld

[env:d1_mini]
; small board
framework = arduino
platform = ${core_2_4_2.platform}
board = d1_mini
board_build.mcu = esp8266
board_build.f_cpu = 160000000L
build_flags = -Wl,-Tesp8266.flash.4m1m.ld

[env:generic_esp12e]
; small board
framework = arduino
platform = ${core_2_4_2.platform}
board = esp12e
board_build.f_cpu = 160000000L
upload_speed = 921600


[env:d1]
framework = arduino
platform = ${core_2_4_2.platform}
board = d1
board_build.mcu = esp8266
board_build.f_cpu = 160000000L
build_flags = -Wl,-Tesp8266.flash.4m1m.ld

[env:d1_mini_pro]
framework = arduino
platform = ${core_2_4_2.platform}
platform = espressif8266
board = d1_mini_pro
; change microcontroller
board_build.mcu = esp8266
; change MCU frequency
board_build.f_cpu = 160000000L
build_flags = -Wl,-Tesp8266.flash.4m1m.ld

[env:d1_mini_lite]
; small board
framework = arduino
platform = ${core_2_4_2.platform}
platform = espressif8266
board = d1_mini_lite
; change microcontroller
board_build.mcu = esp8266
; change MCU frequency
board_build.f_cpu = 160000000L
build_flags = -Wl,-Tesp8266.flash.4m1m.ld

[env:esp32]
platform = espressif32
framework = arduino
board = nodemcu-32s
board_build.mcu = esp32
board_build.f_cpu = 240000000L
lib_ignore = AsyncPing_esp8266
